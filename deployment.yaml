apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pgadmin4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgadmin4
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: modify-config-distro-py-permissions
          image: docker.io/dpage/pgadmin4:snapshot
          imagePullPolicy: IfNotPresent
          workingDir: /emptydir
          command: ["sh", "-x", "-c"]
          args: ['ls python3.* | sort -V -r | head -n 1 | xargs -I {} cp {} python3']
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
          securityContext:
# If not OpenShift add for extra security            seLinuxOptions: {}
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: "RuntimeDefault"
        - name: unset-python3-cli-net-cap
          image: docker.io/dpage/pgadmin4:snapshot
          imagePullPolicy: IfNotPresent
          workingDir: /emptydir
          command: ["sh", "-x", "-c"]
          args: ['cp -p /pgadmin4/config_distro.py . && chmod 777 config_distro.py']
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
          securityContext:
# If not OpenShift add for extra security            seLinuxOptions: {}
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: "RuntimeDefault"
      containers:
        - name: pgadmin4
          image: docker.io/dpage/pgadmin4:snapshot
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
# If not OpenShift add for extra security            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              port: http
              path: /misc/ping
          env:
            - name: PGADMIN_LISTEN_PORT
              value: "8080"
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@admin.com
            - name: PGADMIN_DEFAULT_PASSWORD
              value: mySecretPassword
            - name: PGADMIN_DISABLE_POSTFIX
              value: "true"
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
            - name: empty-dir
              mountPath: /pgadmin4/config_distro.py
              subPath: config_distro.py
            - name: empty-dir
              mountPath: /usr/bin/python3
              subPath: python3
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp
            - name: empty-dir
              mountPath: /var/log/pgadmin
              subPath: logs
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: pgadmin-data
          emptyDir: {}
        - name: empty-dir
          emptyDir: {}
      securityContext:
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
